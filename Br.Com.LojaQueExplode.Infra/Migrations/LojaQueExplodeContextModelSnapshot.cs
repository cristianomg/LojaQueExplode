// <auto-generated />
using System;
using Br.Com.LojaQueExplode.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Br.Com.LojaQueExplode.Infra.Migrations
{
    [DbContext(typeof(LojaQueExplodeContext))]
    partial class LojaQueExplodeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ComplementaryProductData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WarrantyTime")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ComplementaryProductDatas");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4e1059d-0efe-42a5-b1b3-c94458be3b87"),
                            Name = "Common"
                        },
                        new
                        {
                            Id = new Guid("198b8a91-23f4-4d73-99a0-63ae594f39b5"),
                            Name = "Administration"
                        });
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplementaryProductDataID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ComplementaryProductDataID")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ProductPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimiType")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPhotos");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ProductShoppingCart", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShoppingCartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ShoppingCartId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ProductShoppingCarts");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.PurchaseStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("PurchaseStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b167e4b3-597d-4696-bf2c-b4fda3f0e8eb"),
                            Code = 1,
                            Description = "",
                            Name = "Open"
                        },
                        new
                        {
                            Id = new Guid("45b7c40e-c952-4b28-938e-3da2e665641f"),
                            Code = 2,
                            Description = "",
                            Name = "RequestedProducts"
                        },
                        new
                        {
                            Id = new Guid("bf6dbb82-98a6-4ca9-b461-e3998af66d98"),
                            Code = 3,
                            Description = "",
                            Name = "PaymentMade"
                        },
                        new
                        {
                            Id = new Guid("c7a24e0a-f1b4-45b0-a461-3fdb31bb63bd"),
                            Code = 4,
                            Description = "",
                            Name = "PaymentApproved"
                        },
                        new
                        {
                            Id = new Guid("bd60421b-f8ff-415f-90d5-260a6cda29b2"),
                            Code = 5,
                            Description = "",
                            Name = "SendedProducts"
                        },
                        new
                        {
                            Id = new Guid("475dfdb2-5583-46a1-9799-77702c1e59bc"),
                            Code = 6,
                            Description = "",
                            Name = "PurchaseFinished"
                        });
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PurchaseStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PermissionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.Product", b =>
                {
                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.ComplementaryProductData", "ComplementaryProductData")
                        .WithOne("Product")
                        .HasForeignKey("Br.Com.LojaQueExplode.Domain.Entities.Product", "ComplementaryProductDataID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ProductPhoto", b =>
                {
                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ProductShoppingCart", b =>
                {
                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.Product", "Product")
                        .WithMany("ProductShoppingCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.ShoppingCart", "ShoppingCart")
                        .WithMany("ProductShoppingCarts")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.ShoppingCart", b =>
                {
                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.PurchaseStatus", "PurchaseStatus")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("PurchaseStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.User", "User")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Br.Com.LojaQueExplode.Domain.Entities.User", b =>
                {
                    b.HasOne("Br.Com.LojaQueExplode.Domain.Entities.Permission", "Permission")
                        .WithMany("Users")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
